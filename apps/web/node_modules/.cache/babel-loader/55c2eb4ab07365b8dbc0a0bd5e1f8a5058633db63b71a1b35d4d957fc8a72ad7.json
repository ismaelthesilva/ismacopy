{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelsilva/Dev-Mini/ismaHOST/ismacopy/apps/web/src/pages/landingPages/bjjusa/Performance2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, ToggleButton, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Performance2 = () => {\n  _s();\n  // State variables\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  const [giType, setGiType] = useState('GI');\n  const [trainingType, setTrainingType] = useState('Training');\n  const [gender, setGender] = useState('Male');\n  const [belt, setBelt] = useState('White');\n  const [beltStripes, setBeltStripes] = useState(0);\n  const [age, setAge] = useState('Adult');\n  const [gymName, setGymName] = useState('');\n  const [masterName, setMasterName] = useState('');\n  const [competitionName, setCompetitionName] = useState('');\n  const [matchResult, setMatchResult] = useState('Win');\n  const [selectedSubmissions, setSelectedSubmissions] = useState([]);\n  const [competitionOutcome, setCompetitionOutcome] = useState('');\n  const [score, setScore] = useState('');\n  const [weightDivision, setWeightDivision] = useState(''); // Added for weight selection\n  const [showAdvancedBelts, setShowAdvancedBelts] = useState(false);\n\n  // Age categories, belts, weights, submissions, and other constants remain unchanged\n  const ages = ['Kids', 'Juvenile', 'Adult', 'Master 1', 'Master 2', 'Master 3', 'Master 4', 'Master 5', 'Master 6', 'Master 7'];\n  const getBeltsForAgeAndType = (selectedAge, advanced) => {\n    if (selectedAge === 'Kids') return ['White', 'Grey', 'Yellow', 'Orange', 'Green'];\n    if (selectedAge === 'Juvenile') return ['White', 'Blue', 'Purple', 'Brown', 'Black'];\n    return advanced ? ['White', 'Blue', 'Purple', 'Brown', 'Black 0°', 'Black 1°', 'Black 2°', 'Black 3°', 'Black 4°', 'Black 5°', 'Black 6°', 'Red/Black 7°', 'Red/White 8°', 'Red 9°'] : ['White', 'Blue', 'Purple', 'Brown', 'Black'];\n  };\n  const getBeltDegree = () => {\n    if (showAdvancedBelts && belt.startsWith('Black') || belt.startsWith('Red')) {\n      const degreeMatch = belt.match(/\\d+°/);\n      return degreeMatch ? parseInt(degreeMatch[0]) : 1;\n    }\n    return beltStripes;\n  };\n  const weights = {\n    GI: {\n      Male: [{\n        name: 'Rooster',\n        kg: 57.5,\n        lbs: 127\n      }, {\n        name: 'Light Feather',\n        kg: 64,\n        lbs: 141\n      }, {\n        name: 'Feather',\n        kg: 70,\n        lbs: 154\n      }, {\n        name: 'Light',\n        kg: 76,\n        lbs: 168\n      }, {\n        name: 'Middle',\n        kg: 82.3,\n        lbs: 181\n      }, {\n        name: 'Medium Heavy',\n        kg: 88.3,\n        lbs: 195\n      }, {\n        name: 'Heavy',\n        kg: 94.3,\n        lbs: 208\n      }, {\n        name: 'Super Heavy',\n        kg: 100.5,\n        lbs: 222\n      }, {\n        name: 'Ultra Heavy',\n        kg: 'Over 100.5',\n        lbs: 'Over 222'\n      }],\n      Female: [{\n        name: 'Rooster',\n        kg: 48.5,\n        lbs: 107\n      }, {\n        name: 'Light Feather',\n        kg: 53.5,\n        lbs: 118\n      }, {\n        name: 'Feather',\n        kg: 58.5,\n        lbs: 129\n      }, {\n        name: 'Light',\n        kg: 64,\n        lbs: 141\n      }, {\n        name: 'Middle',\n        kg: 69,\n        lbs: 152\n      }, {\n        name: 'Medium Heavy',\n        kg: 74,\n        lbs: 163\n      }, {\n        name: 'Heavy',\n        kg: 79.3,\n        lbs: 175\n      }, {\n        name: 'Super Heavy',\n        kg: 84.3,\n        lbs: 186\n      }, {\n        name: 'Ultra Heavy',\n        kg: 'Over 84.3',\n        lbs: 'Over 186'\n      }]\n    },\n    NO_GI: {\n      Male: [{\n        name: 'Rooster',\n        kg: 55.5,\n        lbs: 122\n      }, {\n        name: 'Light Feather',\n        kg: 61.5,\n        lbs: 136\n      }, {\n        name: 'Feather',\n        kg: 67.5,\n        lbs: 149\n      }, {\n        name: 'Light',\n        kg: 73.5,\n        lbs: 162\n      }, {\n        name: 'Middle',\n        kg: 79.5,\n        lbs: 175\n      }, {\n        name: 'Medium Heavy',\n        kg: 85.5,\n        lbs: 189\n      }, {\n        name: 'Heavy',\n        kg: 91.5,\n        lbs: 202\n      }, {\n        name: 'Super Heavy',\n        kg: 97.5,\n        lbs: 215\n      }, {\n        name: 'Ultra Heavy',\n        kg: 'Over 97.5',\n        lbs: 'Over 215'\n      }],\n      Female: [{\n        name: 'Rooster',\n        kg: 46.5,\n        lbs: 103\n      }, {\n        name: 'Light Feather',\n        kg: 51.5,\n        lbs: 114\n      }, {\n        name: 'Feather',\n        kg: 56.5,\n        lbs: 125\n      }, {\n        name: 'Light',\n        kg: 61.5,\n        lbs: 136\n      }, {\n        name: 'Middle',\n        kg: 66.5,\n        lbs: 147\n      }, {\n        name: 'Medium Heavy',\n        kg: 71.5,\n        lbs: 158\n      }, {\n        name: 'Heavy',\n        kg: 76.5,\n        lbs: 169\n      }, {\n        name: 'Super Heavy',\n        kg: 81.5,\n        lbs: 180\n      }, {\n        name: 'Ultra Heavy',\n        kg: 'Over 81.5',\n        lbs: 'Over 180'\n      }]\n    }\n  };\n  const submissions = {\n    Choke: ['RNC (Rear Naked Choke)',\n    // C\n    'Lapel Choke',\n    // C\n    'Omoplata',\n    // C\n    'Collar Choke',\n    // C\n    'Guillotine',\n    // C\n    'Ezekiel Choke',\n    // C\n    'North-South Choke',\n    // C\n    'Rear Triangle',\n    // C\n    'Side Triangle',\n    // C\n    'Darce Choke',\n    // C\n    'Baseball Bat Choke',\n    // C\n    'Crucifix Choke',\n    // C\n    'Loop Choke',\n    // C\n    'Brabo Choke',\n    // C\n    'Neck Pressure Submission',\n    // C\n    'Shoulder Choke',\n    // C\n    'Smother',\n    // C\n    'Flying Triangle',\n    // C\n    'Gogoplata',\n    // C\n    'Dead Orchard',\n    // C\n    'Japanese Necktie' // C\n    ],\n    Arm: ['Americana',\n    // A\n    'Armbar',\n    // A\n    'Kimura',\n    // A\n    'Arm Triangle',\n    // A\n    'Inverted Armbar',\n    // A\n    'Tap out',\n    // A\n    'Estima Lock' // A\n    ],\n    Leg: ['Heel Hook',\n    // L\n    'Outside Heel Hook',\n    // L\n    'Ankle Lock',\n    // L\n    'Inside Heel Hook',\n    // L\n    'Bow and Arrow',\n    // L\n    'Kneebar',\n    // L\n    'Straight Ankle Lock',\n    // L\n    'Toe Hold',\n    // L\n    'Wrist Lock',\n    // L\n    'Limb Lock',\n    // L\n    'Anaconda Cloverleaf',\n    // L\n    'Shoulder Lock',\n    // L\n    'Calf Slicer',\n    // L\n    'Calf Cracker',\n    // L\n    'Subey Stretch' // L\n    ]\n  };\n  const getResultBackground = result => {\n    switch (result) {\n      case 'Win':\n        return '#28a745';\n      case 'Draw':\n        return '#ffc107';\n      case 'Learn':\n        return '#dc3545';\n      default:\n        return 'transparent';\n    }\n  };\n\n  // Updated useEffect\n  useEffect(() => {\n    if (trainingType !== 'Training' || matchResult !== 'Win' && matchResult !== 'Learn') {\n      setSelectedSubmissions([]);\n    }\n    if (trainingType !== 'Competition' || matchResult !== 'Win' && matchResult !== 'Learn') {\n      setCompetitionOutcome('');\n      setScore('');\n    }\n  }, [trainingType, matchResult]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = {\n      date,\n      giType,\n      trainingType,\n      gender,\n      belt,\n      beltStripes,\n      age,\n      gymName,\n      masterName,\n      competitionName,\n      matchResult,\n      selectedSubmissions: trainingType === 'Training' ? selectedSubmissions : [],\n      competitionOutcome: trainingType === 'Competition' ? competitionOutcome : '',\n      score: trainingType === 'Competition' && competitionOutcome === 'Points' ? score : '',\n      weightDivision\n    };\n    console.log(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"techniques-section text-white d-flex align-items-center min-vh-100\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"text-center mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4 fw-bold mb-3 animate__animated animate__fadeIn\",\n            children: \"Performance Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead mb-4 animate__animated animate__fadeIn animate__delay-1s\",\n            children: \"Track your progress and dominate the mat!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 8,\n            offset: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"p-4 bg-dark bg-opacity-75 rounded shadow-lg\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"g-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"w-100\",\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: \"male-toggle\",\n                    type: \"radio\",\n                    variant: gender === 'Male' ? 'primary' : 'outline-light',\n                    name: \"gender\",\n                    value: \"Male\",\n                    checked: gender === 'Male',\n                    onChange: e => setGender(e.target.value),\n                    className: \"flex-grow-1 rounded-0\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: \"female-toggle\",\n                    type: \"radio\",\n                    variant: gender === 'Female' ? 'primary' : 'outline-light',\n                    name: \"gender\",\n                    value: \"Female\",\n                    checked: gender === 'Female',\n                    onChange: e => setGender(e.target.value),\n                    className: \"flex-grow-1 rounded-0\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Age Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: age,\n                  onChange: e => setAge(e.target.value),\n                  children: ages.map(ageOption => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: ageOption\n                  }, ageOption, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 46\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Belt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: belt,\n                  onChange: e => {\n                    const newBelt = e.target.value;\n                    setBelt(newBelt);\n                    if (newBelt === 'Black' && age !== 'Kids' && age !== 'Juvenile') setShowAdvancedBelts(true);else if (!getBeltsForAgeAndType(age, true).includes(newBelt)) setShowAdvancedBelts(false);\n                  },\n                  children: getBeltsForAgeAndType(age, showAdvancedBelts).map(beltOption => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: beltOption\n                  }, beltOption, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), showAdvancedBelts && belt.startsWith('Black') || belt.startsWith('Red') ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Degree (Automatic)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: `${getBeltDegree()}°`,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Stripes (0-4)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: beltStripes,\n                  onChange: e => setBeltStripes(parseInt(e.target.value)),\n                  children: Array.from({\n                    length: 5\n                  }, (_, i) => i).map(stripe => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: stripe,\n                    children: [stripe, \" Stripe(s)\"]\n                  }, stripe, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"GI / NO-GI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"w-100\",\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: \"gi-toggle\",\n                    type: \"radio\",\n                    variant: giType === 'GI' ? 'primary' : 'outline-light',\n                    name: \"gi-type\",\n                    value: \"GI\",\n                    checked: giType === 'GI',\n                    onChange: e => setGiType(e.target.value),\n                    className: \"flex-grow-1 rounded-0\",\n                    children: \"GI\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: \"no-gi-toggle\",\n                    type: \"radio\",\n                    variant: giType === 'NO_GI' ? 'primary' : 'outline-light',\n                    name: \"gi-type\",\n                    value: \"NO_GI\",\n                    checked: giType === 'NO_GI',\n                    onChange: e => setGiType(e.target.value),\n                    className: \"flex-grow-1 rounded-0\",\n                    children: \"NO-GI\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Weight Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: weightDivision,\n                  onChange: e => setWeightDivision(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Weight\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 21\n                  }, this), weights[giType][gender].map(weight => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: weight.name,\n                    children: `${weight.name} - ${weight.kg} kg / ${weight.lbs} lbs`\n                  }, weight.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Training or Competition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"w-100\",\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: \"training-toggle\",\n                    type: \"radio\",\n                    variant: trainingType === 'Training' ? 'primary' : 'outline-light',\n                    name: \"training-type\",\n                    value: \"Training\",\n                    checked: trainingType === 'Training',\n                    onChange: e => setTrainingType(e.target.value),\n                    className: \"flex-grow-1 rounded-0\",\n                    children: \"Training\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: \"competition-toggle\",\n                    type: \"radio\",\n                    variant: trainingType === 'Competition' ? 'primary' : 'outline-light',\n                    name: \"training-type\",\n                    value: \"Competition\",\n                    checked: trainingType === 'Competition',\n                    onChange: e => setTrainingType(e.target.value),\n                    className: \"flex-grow-1 rounded-0\",\n                    children: \"Competition\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Gym Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: gymName,\n                  onChange: e => setGymName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Master's Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: masterName,\n                  onChange: e => setMasterName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), trainingType === 'Competition' && /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Competition Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: competitionName,\n                  onChange: e => setCompetitionName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Match Result\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: matchResult,\n                  onChange: e => setMatchResult(e.target.value),\n                  style: {\n                    backgroundColor: getResultBackground(matchResult)\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Win\",\n                    children: \"Win\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Draw\",\n                    children: \"Draw\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Learn\",\n                    children: \"Learn\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), (trainingType === 'Training' || trainingType === 'Competition') && (matchResult === 'Win' || matchResult === 'Learn') && /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: trainingType === 'Training' ? matchResult === 'Win' ? 'Submissions Used' : 'Submissions Suffered' : matchResult === 'Win' ? 'Submissions Used' : 'Submissions Suffered'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this), trainingType === 'Training' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n                  as: \"select\",\n                  multiple: true,\n                  value: selectedSubmissions,\n                  onChange: e => setSelectedSubmissions(Array.from(e.target.selectedOptions, option => option.value)),\n                  className: \"mb-2\",\n                  size: 5 // Shows multiple options without scrolling initially\n                  ,\n                  children: Object.entries(submissions).map(([type, subs]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: `${type} (${type === 'Choke' ? 'C' : type === 'Arm' ? 'A' : 'L'})`,\n                    children: subs.map(sub => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: sub,\n                      children: sub\n                    }, sub, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 31\n                    }, this))\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Form.Select, {\n                  as: \"select\",\n                  multiple: true,\n                  value: selectedSubmissions,\n                  onChange: e => setSelectedSubmissions(Array.from(e.target.selectedOptions, option => option.value)),\n                  className: \"mb-2\",\n                  size: 5 // Shows multiple options without scrolling initially\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Submissions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this), Object.entries(submissions).map(([type, subs]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: `${type} (${type === 'Choke' ? 'C' : type === 'Arm' ? 'A' : 'L'})`,\n                    children: subs.map(sub => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: sub,\n                      children: sub\n                    }, sub, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 31\n                    }, this))\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: trainingType === 'Training' ? 'Hold Ctrl (Windows) or Cmd (Mac) to select multiple submissions.' : 'Hold Ctrl (Windows) or Cmd (Mac) to select multiple submissions for the competition outcome.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, this), trainingType === 'Competition' && /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: competitionOutcome,\n                  onChange: e => setCompetitionOutcome(e.target.value),\n                  className: \"mt-2 mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Outcome Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Submission\",\n                    children: \"Submission\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Walkover\",\n                    children: \"Walkover\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Ref Decision\",\n                    children: \"Ref Decision\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Points\",\n                    children: \"Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Golden\",\n                    children: \"Golden\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this), trainingType === 'Competition' && (competitionOutcome === 'Points' || competitionOutcome === 'Golden') && /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 2,\n                  placeholder: competitionOutcome === 'Points' ? \"Enter score (e.g., 10-2 or Advantage)\" : \"Enter Golden Score result (e.g., Takedown or Submission)\",\n                  value: score,\n                  onChange: e => setScore(e.target.value),\n                  className: \"mt-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: date,\n                  onChange: e => setDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: 12,\n                className: \"text-center mt-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  size: \"lg\",\n                  children: \"Register Result\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(Performance2, \"8jee9VHWiDdyeR2Nz7C56ajy1ps=\");\n_c = Performance2;\nexport default Performance2;\nvar _c;\n$RefreshReg$(_c, \"Performance2\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","ToggleButton","ButtonGroup","jsxDEV","_jsxDEV","Performance2","_s","date","setDate","Date","toISOString","split","giType","setGiType","trainingType","setTrainingType","gender","setGender","belt","setBelt","beltStripes","setBeltStripes","age","setAge","gymName","setGymName","masterName","setMasterName","competitionName","setCompetitionName","matchResult","setMatchResult","selectedSubmissions","setSelectedSubmissions","competitionOutcome","setCompetitionOutcome","score","setScore","weightDivision","setWeightDivision","showAdvancedBelts","setShowAdvancedBelts","ages","getBeltsForAgeAndType","selectedAge","advanced","getBeltDegree","startsWith","degreeMatch","match","parseInt","weights","GI","Male","name","kg","lbs","Female","NO_GI","submissions","Choke","Arm","Leg","getResultBackground","result","handleSubmit","e","preventDefault","formData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","span","offset","onSubmit","Group","as","Label","id","type","variant","value","checked","onChange","target","Select","map","ageOption","newBelt","includes","beltOption","Control","readOnly","Array","from","length","_","i","stripe","weight","style","backgroundColor","multiple","selectedOptions","option","size","Object","entries","subs","label","sub","Text","rows","placeholder","_c","$RefreshReg$"],"sources":["/Users/ismaelsilva/Dev-Mini/ismaHOST/ismacopy/apps/web/src/pages/landingPages/bjjusa/Performance2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, ToggleButton, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../styles.css'; \n\nconst Performance2 = () => {\n  // State variables\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  const [giType, setGiType] = useState('GI');\n  const [trainingType, setTrainingType] = useState('Training');\n  const [gender, setGender] = useState('Male');\n  const [belt, setBelt] = useState('White');\n  const [beltStripes, setBeltStripes] = useState(0);\n  const [age, setAge] = useState('Adult');\n  const [gymName, setGymName] = useState('');\n  const [masterName, setMasterName] = useState('');\n  const [competitionName, setCompetitionName] = useState('');\n  const [matchResult, setMatchResult] = useState('Win');\n  const [selectedSubmissions, setSelectedSubmissions] = useState([]);\n  const [competitionOutcome, setCompetitionOutcome] = useState('');\n  const [score, setScore] = useState('');\n  const [weightDivision, setWeightDivision] = useState(''); // Added for weight selection\n  const [showAdvancedBelts, setShowAdvancedBelts] = useState(false);\n\n  // Age categories, belts, weights, submissions, and other constants remain unchanged\n  const ages = ['Kids', 'Juvenile', 'Adult', 'Master 1', 'Master 2', 'Master 3', 'Master 4', 'Master 5', 'Master 6', 'Master 7'];\n\n  const getBeltsForAgeAndType = (selectedAge, advanced) => {\n    if (selectedAge === 'Kids') return ['White', 'Grey', 'Yellow', 'Orange', 'Green'];\n    if (selectedAge === 'Juvenile') return ['White', 'Blue', 'Purple', 'Brown', 'Black'];\n    return advanced\n      ? ['White', 'Blue', 'Purple', 'Brown', 'Black 0°', 'Black 1°', 'Black 2°', 'Black 3°', 'Black 4°', 'Black 5°', 'Black 6°', 'Red/Black 7°', 'Red/White 8°', 'Red 9°']\n      : ['White', 'Blue', 'Purple', 'Brown', 'Black'];\n  };\n\n  const getBeltDegree = () => {\n    if ((showAdvancedBelts && belt.startsWith('Black')) || belt.startsWith('Red')) {\n      const degreeMatch = belt.match(/\\d+°/);\n      return degreeMatch ? parseInt(degreeMatch[0]) : 1;\n    }\n    return beltStripes;\n  };\n\n  const weights = {\n    GI: {\n      Male: [\n        { name: 'Rooster', kg: 57.5, lbs: 127 },\n        { name: 'Light Feather', kg: 64, lbs: 141 },\n        { name: 'Feather', kg: 70, lbs: 154 },\n        { name: 'Light', kg: 76, lbs: 168 },\n        { name: 'Middle', kg: 82.3, lbs: 181 },\n        { name: 'Medium Heavy', kg: 88.3, lbs: 195 },\n        { name: 'Heavy', kg: 94.3, lbs: 208 },\n        { name: 'Super Heavy', kg: 100.5, lbs: 222 },\n        { name: 'Ultra Heavy', kg: 'Over 100.5', lbs: 'Over 222' }\n      ],\n      Female: [\n        { name: 'Rooster', kg: 48.5, lbs: 107 },\n        { name: 'Light Feather', kg: 53.5, lbs: 118 },\n        { name: 'Feather', kg: 58.5, lbs: 129 },\n        { name: 'Light', kg: 64, lbs: 141 },\n        { name: 'Middle', kg: 69, lbs: 152 },\n        { name: 'Medium Heavy', kg: 74, lbs: 163 },\n        { name: 'Heavy', kg: 79.3, lbs: 175 },\n        { name: 'Super Heavy', kg: 84.3, lbs: 186 },\n        { name: 'Ultra Heavy', kg: 'Over 84.3', lbs: 'Over 186' }\n      ]\n    },\n    NO_GI: {\n      Male: [\n        { name: 'Rooster', kg: 55.5, lbs: 122 },\n        { name: 'Light Feather', kg: 61.5, lbs: 136 },\n        { name: 'Feather', kg: 67.5, lbs: 149 },\n        { name: 'Light', kg: 73.5, lbs: 162 },\n        { name: 'Middle', kg: 79.5, lbs: 175 },\n        { name: 'Medium Heavy', kg: 85.5, lbs: 189 },\n        { name: 'Heavy', kg: 91.5, lbs: 202 },\n        { name: 'Super Heavy', kg: 97.5, lbs: 215 },\n        { name: 'Ultra Heavy', kg: 'Over 97.5', lbs: 'Over 215' }\n      ],\n      Female: [\n        { name: 'Rooster', kg: 46.5, lbs: 103 },\n        { name: 'Light Feather', kg: 51.5, lbs: 114 },\n        { name: 'Feather', kg: 56.5, lbs: 125 },\n        { name: 'Light', kg: 61.5, lbs: 136 },\n        { name: 'Middle', kg: 66.5, lbs: 147 },\n        { name: 'Medium Heavy', kg: 71.5, lbs: 158 },\n        { name: 'Heavy', kg: 76.5, lbs: 169 },\n        { name: 'Super Heavy', kg: 81.5, lbs: 180 },\n        { name: 'Ultra Heavy', kg: 'Over 81.5', lbs: 'Over 180' }\n      ]\n    }\n  };\n\n  const submissions = {\n    Choke: [\n      'RNC (Rear Naked Choke)',  // C\n      'Lapel Choke',             // C\n      'Omoplata',               // C\n      'Collar Choke',           // C\n      'Guillotine',             // C\n      'Ezekiel Choke',          // C\n      'North-South Choke',      // C\n      'Rear Triangle',          // C\n      'Side Triangle',          // C\n      'Darce Choke',            // C\n      'Baseball Bat Choke',     // C\n      'Crucifix Choke',         // C\n      'Loop Choke',             // C\n      'Brabo Choke',            // C\n      'Neck Pressure Submission', // C\n      'Shoulder Choke',         // C\n      'Smother',                // C\n      'Flying Triangle',        // C\n      'Gogoplata',              // C\n      'Dead Orchard',           // C\n      'Japanese Necktie'        // C\n    ],\n    Arm: [\n      'Americana',              // A\n      'Armbar',                 // A\n      'Kimura',                 // A\n      'Arm Triangle',           // A\n      'Inverted Armbar',        // A\n      'Tap out',                // A\n      'Estima Lock'             // A\n    ],\n    Leg: [\n      'Heel Hook',              // L\n      'Outside Heel Hook',      // L\n      'Ankle Lock',             // L\n      'Inside Heel Hook',       // L\n      'Bow and Arrow',          // L\n      'Kneebar',                // L\n      'Straight Ankle Lock',    // L\n      'Toe Hold',               // L\n      'Wrist Lock',             // L\n      'Limb Lock',              // L\n      'Anaconda Cloverleaf',    // L\n      'Shoulder Lock',          // L\n      'Calf Slicer',            // L\n      'Calf Cracker',           // L\n      'Subey Stretch'           // L\n    ]\n  };\n\n  const getResultBackground = (result) => {\n    switch (result) {\n      case 'Win': return '#28a745';\n      case 'Draw': return '#ffc107';\n      case 'Learn': return '#dc3545';\n      default: return 'transparent';\n    }\n  };\n\n  // Updated useEffect\n  useEffect(() => {\n    if (trainingType !== 'Training' || (matchResult !== 'Win' && matchResult !== 'Learn')) {\n      setSelectedSubmissions([]);\n    }\n    if (trainingType !== 'Competition' || (matchResult !== 'Win' && matchResult !== 'Learn')) {\n      setCompetitionOutcome('');\n      setScore('');\n    }\n  }, [trainingType, matchResult]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      date,\n      giType,\n      trainingType,\n      gender,\n      belt,\n      beltStripes,\n      age,\n      gymName,\n      masterName,\n      competitionName,\n      matchResult,\n      selectedSubmissions: trainingType === 'Training' ? selectedSubmissions : [],\n      competitionOutcome: trainingType === 'Competition' ? competitionOutcome : '',\n      score: trainingType === 'Competition' && competitionOutcome === 'Points' ? score : '',\n      weightDivision\n    };\n    console.log(formData);\n  };\n\n  return (\n    <div className=\"techniques-section text-white d-flex align-items-center min-vh-100\">\n      <Container>\n        <Row className=\"text-center mb-5\">\n          <Col>\n            <h1 className=\"display-4 fw-bold mb-3 animate__animated animate__fadeIn\">Performance Tracker</h1>\n            <p className=\"lead mb-4 animate__animated animate__fadeIn animate__delay-1s\">Track your progress and dominate the mat!</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }}>\n            <Form className=\"p-4 bg-dark bg-opacity-75 rounded shadow-lg\" onSubmit={handleSubmit}>\n              <Row className=\"g-3\">\n                {/* Gender */}\n                <Form.Group as={Col} md={6}>\n                  <Form.Label>Gender</Form.Label>\n                  <ButtonGroup className=\"w-100\">\n                    <ToggleButton\n                      id=\"male-toggle\"\n                      type=\"radio\"\n                      variant={gender === 'Male' ? 'primary' : 'outline-light'}\n                      name=\"gender\"\n                      value=\"Male\"\n                      checked={gender === 'Male'}\n                      onChange={(e) => setGender(e.target.value)}\n                      className=\"flex-grow-1 rounded-0\"\n                    >\n                      Male\n                    </ToggleButton>\n                    <ToggleButton\n                      id=\"female-toggle\"\n                      type=\"radio\"\n                      variant={gender === 'Female' ? 'primary' : 'outline-light'}\n                      name=\"gender\"\n                      value=\"Female\"\n                      checked={gender === 'Female'}\n                      onChange={(e) => setGender(e.target.value)}\n                      className=\"flex-grow-1 rounded-0\"\n                    >\n                      Female\n                    </ToggleButton>\n                  </ButtonGroup>\n                </Form.Group>\n\n                {/* Age */}\n                <Form.Group as={Col} md={6}>\n                  <Form.Label>Age Category</Form.Label>\n                  <Form.Select value={age} onChange={(e) => setAge(e.target.value)}>\n                    {ages.map((ageOption) => <option key={ageOption}>{ageOption}</option>)}\n                  </Form.Select>\n                </Form.Group>\n\n                {/* Belt */}\n                <Form.Group as={Col} md={6}>\n                  <Form.Label>Belt</Form.Label>\n                  <Form.Select\n                    value={belt}\n                    onChange={(e) => {\n                      const newBelt = e.target.value;\n                      setBelt(newBelt);\n                      if (newBelt === 'Black' && age !== 'Kids' && age !== 'Juvenile') setShowAdvancedBelts(true);\n                      else if (!getBeltsForAgeAndType(age, true).includes(newBelt)) setShowAdvancedBelts(false);\n                    }}\n                  >\n                    {getBeltsForAgeAndType(age, showAdvancedBelts).map((beltOption) => (\n                      <option key={beltOption}>{beltOption}</option>\n                    ))}\n                  </Form.Select>\n                </Form.Group>\n\n                {/* Stripes/Degrees */}\n                {((showAdvancedBelts && belt.startsWith('Black')) || belt.startsWith('Red')) ? (\n                  <Form.Group as={Col} md={6}>\n                    <Form.Label>Degree (Automatic)</Form.Label>\n                    <Form.Control type=\"text\" value={`${getBeltDegree()}°`} readOnly />\n                  </Form.Group>\n                ) : (\n                  <Form.Group as={Col} md={6}>\n                    <Form.Label>Stripes (0-4)</Form.Label>\n                    <Form.Select value={beltStripes} onChange={(e) => setBeltStripes(parseInt(e.target.value))}>\n                      {Array.from({ length: 5 }, (_, i) => i).map((stripe) => (\n                        <option key={stripe} value={stripe}>{stripe} Stripe(s)</option>\n                      ))}\n                    </Form.Select>\n                  </Form.Group>\n                )}\n\n                {/* GI/NO-GI */}\n                <Form.Group as={Col} md={12} className=\"mb-3\">\n                  <Form.Label>GI / NO-GI</Form.Label>\n                  <ButtonGroup className=\"w-100\">\n                    <ToggleButton\n                      id=\"gi-toggle\"\n                      type=\"radio\"\n                      variant={giType === 'GI' ? 'primary' : 'outline-light'}\n                      name=\"gi-type\"\n                      value=\"GI\"\n                      checked={giType === 'GI'}\n                      onChange={(e) => setGiType(e.target.value)}\n                      className=\"flex-grow-1 rounded-0\"\n                    >\n                      GI\n                    </ToggleButton>\n                    <ToggleButton\n                      id=\"no-gi-toggle\"\n                      type=\"radio\"\n                      variant={giType === 'NO_GI' ? 'primary' : 'outline-light'}\n                      name=\"gi-type\"\n                      value=\"NO_GI\"\n                      checked={giType === 'NO_GI'}\n                      onChange={(e) => setGiType(e.target.value)}\n                      className=\"flex-grow-1 rounded-0\"\n                    >\n                      NO-GI\n                    </ToggleButton>\n                  </ButtonGroup>\n                </Form.Group>\n\n                {/* Weight Division */}\n                <Form.Group as={Col} md={6}>\n                  <Form.Label>Weight Division</Form.Label>\n                  <Form.Select\n                    value={weightDivision}\n                    onChange={(e) => setWeightDivision(e.target.value)}\n                  >\n                    <option value=\"\">Select Weight</option>\n                    {weights[giType][gender].map((weight) => (\n                      <option key={weight.name} value={weight.name}>\n                        {`${weight.name} - ${weight.kg} kg / ${weight.lbs} lbs`}\n                      </option>\n                    ))}\n                  </Form.Select>\n                </Form.Group>\n\n                {/* Training or Competition */}\n                <Form.Group as={Col} md={6}>\n                  <Form.Label>Training or Competition</Form.Label>\n                  <ButtonGroup className=\"w-100\">\n                    <ToggleButton\n                      id=\"training-toggle\"\n                      type=\"radio\"\n                      variant={trainingType === 'Training' ? 'primary' : 'outline-light'}\n                      name=\"training-type\"\n                      value=\"Training\"\n                      checked={trainingType === 'Training'}\n                      onChange={(e) => setTrainingType(e.target.value)}\n                      className=\"flex-grow-1 rounded-0\"\n                    >\n                      Training\n                    </ToggleButton>\n                    <ToggleButton\n                      id=\"competition-toggle\"\n                      type=\"radio\"\n                      variant={trainingType === 'Competition' ? 'primary' : 'outline-light'}\n                      name=\"training-type\"\n                      value=\"Competition\"\n                      checked={trainingType === 'Competition'}\n                      onChange={(e) => setTrainingType(e.target.value)}\n                      className=\"flex-grow-1 rounded-0\"\n                    >\n                      Competition\n                    </ToggleButton>\n                  </ButtonGroup>\n                </Form.Group>\n\n                {/* Gym Name */}\n                <Form.Group as={Col} md={12}>\n                  <Form.Label>Gym Name</Form.Label>\n                  <Form.Control type=\"text\" value={gymName} onChange={(e) => setGymName(e.target.value)} />\n                </Form.Group>\n\n                {/* Master's Name */}\n                <Form.Group as={Col} md={12}>\n                  <Form.Label>Master's Name</Form.Label>\n                  <Form.Control type=\"text\" value={masterName} onChange={(e) => setMasterName(e.target.value)} />\n                </Form.Group>\n\n                {/* Competition Name */}\n                {trainingType === 'Competition' && (\n                  <Form.Group as={Col} md={12}>\n                    <Form.Label>Competition Name</Form.Label>\n                    <Form.Control type=\"text\" value={competitionName} onChange={(e) => setCompetitionName(e.target.value)} />\n                  </Form.Group>\n                )}\n\n                {/* Match Result */}\n                <Form.Group as={Col} md={6}>\n                  <Form.Label>Match Result</Form.Label>\n                  <Form.Select\n                    value={matchResult}\n                    onChange={(e) => setMatchResult(e.target.value)}\n                    style={{ backgroundColor: getResultBackground(matchResult) }}\n                  >\n                    <option value=\"Win\">Win</option>\n                    <option value=\"Draw\">Draw</option>\n                    <option value=\"Learn\">Learn</option>\n                  </Form.Select>\n                </Form.Group>\n\n                {/* Submission/Outcome Selection */}\n                {(trainingType === 'Training' || trainingType === 'Competition') && (matchResult === 'Win' || matchResult === 'Learn') && (\n                  <Form.Group as={Col} md={12}>\n                    <Form.Label>\n                      {trainingType === 'Training'\n                        ? matchResult === 'Win' ? 'Submissions Used' : 'Submissions Suffered'\n                        : matchResult === 'Win' ? 'Submissions Used' : 'Submissions Suffered'}\n                    </Form.Label>\n                    {trainingType === 'Training' ? (\n                      <Form.Select\n                        as=\"select\"\n                        multiple\n                        value={selectedSubmissions}\n                        onChange={(e) => setSelectedSubmissions(Array.from(e.target.selectedOptions, (option) => option.value))}\n                        className=\"mb-2\"\n                        size={5} // Shows multiple options without scrolling initially\n                      >\n                        {Object.entries(submissions).map(([type, subs]) => (\n                          <optgroup key={type} label={`${type} (${type === 'Choke' ? 'C' : type === 'Arm' ? 'A' : 'L'})`}>\n                            {subs.map((sub) => (\n                              <option key={sub} value={sub}>{sub}</option>\n                            ))}\n                          </optgroup>\n                        ))}\n                      </Form.Select>\n                    ) : (\n                      <Form.Select\n                        as=\"select\"\n                        multiple\n                        value={selectedSubmissions}\n                        onChange={(e) => setSelectedSubmissions(Array.from(e.target.selectedOptions, (option) => option.value))}\n                        className=\"mb-2\"\n                        size={5} // Shows multiple options without scrolling initially\n                      >\n                        <option value=\"\">Select Submissions</option>\n                        {Object.entries(submissions).map(([type, subs]) => (\n                          <optgroup key={type} label={`${type} (${type === 'Choke' ? 'C' : type === 'Arm' ? 'A' : 'L'})`}>\n                            {subs.map((sub) => (\n                              <option key={sub} value={sub}>{sub}</option>\n                            ))}\n                          </optgroup>\n                        ))}\n                      </Form.Select>\n                    )}\n                    <Form.Text className=\"text-muted\">\n                      {trainingType === 'Training'\n                        ? 'Hold Ctrl (Windows) or Cmd (Mac) to select multiple submissions.'\n                        : 'Hold Ctrl (Windows) or Cmd (Mac) to select multiple submissions for the competition outcome.'}\n                    </Form.Text>\n                    {trainingType === 'Competition' && (\n                      <Form.Select\n                        value={competitionOutcome}\n                        onChange={(e) => setCompetitionOutcome(e.target.value)}\n                        className=\"mt-2 mb-2\"\n                      >\n                        <option value=\"\">Select Outcome Type</option>\n                        <option value=\"Submission\">Submission</option>\n                        <option value=\"Walkover\">Walkover</option>\n                        <option value=\"Ref Decision\">Ref Decision</option>\n                        <option value=\"Points\">Points</option>\n                        <option value=\"Golden\">Golden</option>\n                      </Form.Select>\n                    )}\n                    {(trainingType === 'Competition' && (competitionOutcome === 'Points' || competitionOutcome === 'Golden')) && (\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={2}\n                        placeholder={competitionOutcome === 'Points' ? \"Enter score (e.g., 10-2 or Advantage)\" : \"Enter Golden Score result (e.g., Takedown or Submission)\"}\n                        value={score}\n                        onChange={(e) => setScore(e.target.value)}\n                        className=\"mt-2\"\n                      />\n                    )}\n                  </Form.Group>\n                )}\n\n                {/* Date */}\n                <Form.Group as={Col} md={12}>\n                  <Form.Label>Date</Form.Label>\n                  <Form.Control type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n                </Form.Group>\n\n                {/* Submit */}\n                <Form.Group as={Col} md={12} className=\"text-center mt-4\">\n                  <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n                    Register Result\n                  </Button>\n                </Form.Group>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Performance2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}